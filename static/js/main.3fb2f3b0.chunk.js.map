{"version":3,"sources":["logo.svg","Components/RSVP/GuestLookup/index.js","Components/RSVP/Guest/GuestForm/index.js","Components/RSVP/Guest/GuestDisplay/index.js","Components/RSVP/Guest/index.js","Components/RSVP/GuestRespond/index.js","Components/RSVP/GuestSelect/index.js","Components/RSVP/Confirmation/index.js","Components/RSVP/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","GuestLookup","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","firstName","lastName","waiting","lookupGuest","bind","assertThisInitialized","handleChange","e","_this2","preventDefault","endpoint","_this$state","url","concat","fetch","then","response","json","data","window","setTimeout","console","log","setGuests","setState","catch","error","target","name","value","react_default","a","createElement","className","htmlFor","type","id","onChange","disabled","onClick","Component","GuestForm","handleClick","updateGuestAttending","input","tagName","toLowerCase","guest","parentNode","querySelector","updateSelectedGroupId","group_num","updatePlusOneAttending","_this$props$guest","title","suffix","first_name","last_name","groupNum","allowGuest","allow_guest","inputName","guestName","GuestDisplay","guestAllowed","attending","guestAttending","guest_attending","Guest","Guest_GuestForm","Guest_GuestDisplay","GuestRespond","rsvps","updateRsvp","back","groupId","group","guestId","stateUpdate","guestRsvp","_this3","urls","push","Promise","all","map","method","setUpdatedGroup","setRsvpSent","setGroupId","_this4","index","RSVP_Guest","key","GuestSelect","selectGuest","guests","Confirmation","href","reset","RSVP","status","rsvpSent","updatedGroup","RSVP_Confirmation","defineProperty","RSVP_GuestRespond","RSVP_GuestSelect","RSVP_GuestLookup","App","Components_RSVP","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3fb2f3b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nclass GuestLookup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: '',\n            lastName: '',\n            waiting: false,\n        }\n        this.lookupGuest = this.lookupGuest.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    lookupGuest(e) {\n        e.preventDefault();\n\n        let endpoint = this.props.endpoint;\n        let { firstName, lastName } = this.state;\n        let url = `${endpoint}/find/${firstName}/${lastName}`;\n\n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                window.setTimeout(() => console.log('test'), 2000);\n                this.props.setGuests(data);\n                this.setState({waiting: false});\n            })\n            .catch(error => console.error(error));\n        \n        this.setState({waiting: true});\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n\n        let state = this.state;\n        state[e.target.name] = e.target.value;\n        this.setState(state);\n    }\n\n    render() {\n        return (\n            <div className=\"guest-lookup\">\n                <h2>Lookup Your Invitation</h2>\n                <p>\n                    Enter your first and last name <strong><em>as it appears on \n                    your invitation </em></strong>to find your RSVP for your and \n                    your family or group.\n                </p>\n                <div className=\"form-group\">\n                    <label htmlFor=\"firstName\">First Name: </label>\n                    <input \n                        className=\"form-control\"\n                        type=\"text\" \n                        value={this.state.firstName} \n                        id=\"firstName\" \n                        name=\"firstName\" \n                        onChange={this.handleChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"lastName\">Last Name: </label>\n                    <input \n                        className=\"form-control\"\n                        type=\"text\" \n                        value={this.state.lastName} \n                        id=\"lastName\" \n                        name=\"lastName\"\n                        onChange={this.handleChange} />\n                </div>\n                {this.state.waiting ? \n                    <button \n                    disabled\n                    className=\"btn btn-primary\">\n                        Please Wait...\n                    </button> \n                    : <button \n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={this.lookupGuest}>Lookup Invitation</button>}\n            </div>\n        );\n    }\n}\n\nexport default GuestLookup;","import React, { Component } from 'react';\n\nclass GuestForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.handleClick = this.handleClick.bind(this);\n        this.updateGuestAttending = this.updateGuestAttending.bind(this);\n    }\n\n    handleClick(e) {\n        //e.preventDefault();\n        let target = e.target;\n        let tagName = target.tagName.toLowerCase();\n        let guest = this.props.guest;\n        let input;\n        tagName === 'input' ? input = target\n            : input = target.parentNode.querySelector('input');\n\n        if(input) {\n            this.props.updateSelectedGroupId ?\n                this.props.updateSelectedGroupId(guest.group_num)\n                : this.updateGuestAttending(input);\n        }\n\n    }\n\n    updateGuestAttending(input) {\n        let guest = this.props.guest;\n\n        input.name === 'guest' ?\n            this.props.updatePlusOneAttending(guest.id, input.value)\n            : this.props.updateGuestAttending(guest.id, input.value);\n    }\n\n    render() {\n        let { title, suffix } = this.props.guest;\n        let firstName = this.props.guest.first_name;\n        let lastName = this.props.guest.last_name;\n        let groupNum = this.props.guest.group_num;\n        let allowGuest = this.props.guest.allow_guest;\n        let inputName = `${firstName}-${lastName}${suffix ? `-${suffix}` : ''}`;\n        let guestName = `${title} ${firstName} ${lastName} ${suffix ? suffix : ''}`;\n\n        return (\n            <div className=\"guest-container\">\n                {this.props.updateSelectedGroupId ?\n                    <span className=\"guest\" onClick={this.handleClick}>\n                        <div className=\"form-check form-check-inline\">\n                            <input\n                                className=\"form-check-input\"\n                                type=\"radio\"\n                                id={inputName}\n                                name=\"guests\"\n                                value={groupNum} />\n                            <label className=\"form-check-label\" htmlFor={inputName}>\n                                {guestName}\n                            </label>\n                        </div>    \n                    </span> :\n                    <fieldset className=\"guest form-group\" onClick={this.handleClick}>\n                        <legend>{guestName}</legend>\n                        <div className=\"form-check form-check-inline\">\n                            <input\n                                className=\"form-check-input\"\n                                type=\"radio\"\n                                name={inputName}\n                                id={`${inputName}-attending`}\n                                value=\"true\" />\n                            <label className=\"form-check-label\" htmlFor={`${inputName}-attending`}>\n                                Attending\n                            </label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input\n                                className=\"form-check-input\"\n                                type=\"radio\"\n                                name={inputName}\n                                id={`${inputName}-not-attending`}\n                                value=\"false\" />\n                            <label className=\"form-check-label\" htmlFor={`${inputName}-not-attending`}>\n                                Not Attending\n                            </label>\n                        </div>\n                        {allowGuest ? (\n                            <div className=\"plus-one\">\n                                <div className=\"form-check form-check-inline\">\n                                    <input\n                                        className=\"form-check-input\"\n                                        type=\"radio\"\n                                        name=\"guest\"\n                                        id={`${inputName}-guest-attending`}\n                                        value=\"true\" />\n                                    <label className=\"form-check-label\" htmlFor={`${inputName}-guest-attending`}>\n                                        with a Guest\n                                    </label>\n                                </div>\n                                <div className=\"form-check form-check-inline\">   \n                                    <input\n                                        className=\"form-check-input\"\n                                        type=\"radio\"\n                                        name=\"guest\"\n                                        id={`${inputName}-guest-not-attending`}\n                                        value=\"false\" />\n                                    <label className=\"form-check-label\" htmlFor={`${inputName}-guest-not-attending`}>\n                                        without a Guest\n                                    </label>\n                                </div>\n                            </div>\n                        ) : null}\n                    </fieldset>\n                }\n            </div>\n        );\n    }\n}\n\nexport default GuestForm;","import React, { Component } from 'react';\nclass GuestDisplay extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        let { title, suffix } = this.props.guest;\n        let firstName = this.props.guest.first_name;\n        let lastName = this.props.guest.last_name;\n        let guestAllowed = this.props.guest.allow_guest;\n        let attending = this.props.guest.attending;\n        let guestAttending = this.props.guest.guest_attending;\n        let guestName = `${title} ${firstName} ${lastName} ${suffix ? suffix : ''}`;\n        return (\n            <div className=\"guest-container\">\n                <span className=\"guest\">\n                    <h3>{guestName}</h3>\n                    <h4>Attending: {attending ? 'Yes' : 'No'}</h4>\n                    {guestAllowed ? \n                        <p>Guest Attending: {guestAttending ? 'Yes' : 'No'}</p>\n                        : null\n                    }\n                </span>\n            </div>\n        );\n    }\n}\n\nexport default GuestDisplay;","import React, { Component } from 'react';\nimport GuestForm from './GuestForm';\nimport GuestDisplay from './GuestDisplay';\n\nclass Guest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        \n    }\n\n    render() {\n        return (\n            this.props.updateSelectedGroupId || this.props.updateGuestAttending ?\n                <GuestForm\n                    guest={this.props.guest}\n                    updateSelectedGroupId={this.props.updateSelectedGroupId ?\n                        this.props.updateSelectedGroupId : null}\n                    updateGuestAttending={this.props.updateGuestAttending ?\n                        this.props.updateGuestAttending : null} \n                    updatePlusOneAttending={this.props.updatePlusOneAttending ? \n                        this.props.updatePlusOneAttending : null} /> :\n                <GuestDisplay\n                    guest={this.props.guest} />\n        );\n    }\n}\n\nexport default Guest;","import React, { Component } from 'react';\nimport Guest from '../Guest';\n\nclass GuestRespond extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rsvps: {}\n        };\n        this.updateGuestAttending = this.updateGuestAttending.bind(this);\n        this.updatePlusOneAttending = this.updatePlusOneAttending.bind(this);\n        this.updateRsvp = this.updateRsvp.bind(this);\n        this.back = this.back.bind(this);\n    }\n\n    componentDidMount() {\n        let endpoint = this.props.endpoint;\n        let groupId = this.props.groupId;\n        let url = `${endpoint}/group/${groupId}`;\n\n        fetch(url)\n            .then(response => response.json())\n            .then(group => this.setState({ group: group }))\n            .catch(error => console.error(error));\n    }\n\n    updateGuestAttending(guestId, attending) {\n        let stateUpdate = this.state;\n\n        if (!stateUpdate.rsvps[guestId]) stateUpdate.rsvps[guestId] = {};\n        stateUpdate.rsvps[guestId].attending = attending;\n        this.setState(stateUpdate);\n    }\n\n    updatePlusOneAttending(guestId, guestAttending) {\n        let stateUpdate = this.state;\n\n        if (!stateUpdate.rsvps[guestId]) stateUpdate.rsvps[guestId] = {};\n        stateUpdate.rsvps[guestId].guestAttending = guestAttending;\n        this.setState(stateUpdate);\n    }\n\n    updateRsvp() {\n        //console.log(this.state);\n        let rsvps = this.state.rsvps;\n        let endpoint = this.props.endpoint;\n        let urls = [], guestRsvp;\n\n        for (var guestId in rsvps) {\n            guestRsvp = rsvps[guestId];\n            'guestAttending' in guestRsvp ?\n                urls.push(`${endpoint}/rsvp/${guestId}/attending/${guestRsvp.attending}\n                    /guest/${guestRsvp.guestAttending}`)\n                : urls.push(`${endpoint}/rsvp/${guestId}/attending/${guestRsvp.attending}`);\n        }\n\n        Promise.all(urls.map(url => fetch(url, { method: 'PUT' })))\n            .then(() => fetch(`${this.props.endpoint}/group/${this.props.groupId}`)\n            .then(response => response.json())\n            .then(group => {\n                this.props.setUpdatedGroup(group);\n                this.props.setRsvpSent(true);\n            })\n            .catch(error => console.error(error))\n        );\n    }\n\n    back(e) {\n        e.preventDefault();\n        this.props.setGroupId(null);\n    }\n\n    render() {\n        return (\n            <div className=\"guest-respond\">\n                <h2>RSVP for All Guests Below</h2>\n                <p>\n                    Please let us know who from your group will and won't be \n                    attending.\n                </p>\n                <div className=\"group-list\">\n                    {this.state.group ? this.state.group.map((guest, index) =>\n                        <Guest\n                            key={index}\n                            guest={guest}\n                            updateGuestAttending={this.updateGuestAttending}\n                            updatePlusOneAttending={this.updatePlusOneAttending} />\n                    ) : null}\n                </div>\n                <button \n                    className=\"btn btn-primary\"\n                    onClick={this.updateRsvp}>Send</button>\n                <button \n                    className=\"btn btn-secondary\"\n                    onClick={this.back}>Back</button>\n            </div>\n        );\n    }\n}\n\nexport default GuestRespond;","import React, { Component } from 'react';\nimport Guest from '../Guest'\n\nclass GuestSelect extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.updateSelectedGroupId = this.updateSelectedGroupId.bind(this);\n        this.selectGuest = this.selectGuest.bind(this);\n        this.back = this.back.bind(this);\n    }\n\n    selectGuest() {\n        this.props.setGroupId(this.state.groupId);\n    }\n\n    updateSelectedGroupId(groupId) {\n        this.setState({groupId: groupId});\n    }\n\n    back(e) {\n        e.preventDefault();\n        this.props.setGuests(null);\n    }\n \n    render() {\n        return (\n            <div className=\"guest-select\">\n                <h2>Select Your Name</h2>\n                <p>\n                    Find and select your name from the list of guests below.\n                </p>\n                {this.props.guests.map((guest, index) => \n                    <Guest \n                        key={index} \n                        guest={guest} \n                        updateSelectedGroupId={this.updateSelectedGroupId} />\n                )}\n                <button \n                    className=\"btn btn-primary\"\n                    onClick={this.selectGuest}>Select Guest</button>\n                <button \n                    className=\"btn btn-secondary\"\n                    onClick={this.back}>Back</button>\n            </div>\n        );\n    }\n}\n\nexport default GuestSelect;","import React, { Component } from 'react';\nimport Guest from '../Guest';\n\nclass Confirmation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.back = this.back.bind(this);\n    }\n\n    back(e) {\n        e.preventDefault();\n        this.props.setRsvpSent(false);\n    }\n\n    render() {\n        //console.log('group:', this.props.group);\n        return (\n            <div className=\"confirmation\">\n                <h2>Your RSVP has been sent!</h2>\n                {this.props.group.map((guest, index) => \n                    <Guest key={index} guest={guest} />\n                )}\n                <p>\n                    To all of our guests who can't make it to celebrate with us, \n                    know that we completely understand.  We understand that \n                    everyone's lives are busy, and we look forward to celebrating \n                    with you whenever we can!\n                </p>\n                <p>\n                    To all of our guests who are able to make it, we can't wait \n                    to celebrate with you all!  Be sure to check out our <a href=\"http://jkbaclig.com\">\n                    Official Wedding Website</a> for <a href=\"http://jkbaclig.com/details.html\">ceremony and \n                    reception details</a>, <a href=\"http://jkbaclig.com/guide.htmlroom\">\n                    our city guide (including hotel info)</a>, and more.  (Jon \n                    worked really hard on making it, so go check it out!)\n                </p>\n                <p>\n                    If you need to make any changes to your RSVP, you can click \n                    the \"Back\" button now or come back here later to resubmit \n                    your RSVP.  We kindy ask that all RSVP's be finalized by \n                    <strong><em>January 1, 2019.</em></strong>\n                </p>\n                <p>\n                    If you'd like to submit another RSVP, click \"Start Over\" below.\n                </p>\n                <button \n                    className=\"btn btn-primary\"\n                    onClick={this.props.reset}>Start Over</button>\n                <button\n                    className=\"btn btn-secondary\" \n                    onClick={this.back}>Back</button>\n            </div>\n        );\n    }\n}\n\nexport default Confirmation;","import React, { Component } from 'react';\nimport GuestLookup from './GuestLookup';\nimport GuestRespond from './GuestRespond';\nimport GuestSelect from './GuestSelect';\nimport Confirmation from './Confirmation';\n\nclass RSVP extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            endpoint: 'https://jkbaclig-rsvp.herokuapp.com',\n            /*guests: [\n                {\n                    title: 'Mr.',\n                    first_name: 'Crispin',\n                    last_name: 'Baclig',\n                    suffix: 'Sr.',\n                    allow_guest: false,\n                    attending: null,\n                    group_num: 24,\n                    guest_attending: false\n                },\n                {\n                    title: 'Mr.',\n                    first_name: 'Crispin',\n                    last_name: 'Baclig',\n                    suffix: 'Jr.',\n                    allow_guest: false,\n                    attending: null,\n                    group_num: 1,\n                    guest_attending: false\n                },\n                {\n                    title: 'Mr.',\n                    first_name: 'Camille',\n                    last_name: 'Fritsch',\n                    allow_guest: true,\n                    attending: null,\n                    group_num: 19,\n                    guest_attending: false\n                }\n            ],\n            groupId: 19,\n            rsvpSent: true,\n            updatedGroup: [\n                {\n                    title: 'Mr.',\n                    first_name: 'Camille',\n                    last_name: 'Fritsch',\n                    allow_guest: true,\n                    attending: true,\n                    group_num: 19,\n                    guest_attending: true\n                }\n            ]*/\n        };\n        this.setGuests = this.setGuests.bind(this);\n        this.setGroupId = this.setGroupId.bind(this);\n        this.setRsvpSent = this.setRsvpSent.bind(this);\n        this.reset = this.reset.bind(this);\n        this.setUpdatedGroup = this.setUpdatedGroup.bind(this);\n    }\n\n    setGuests(guests) {\n        this.setState({guests: guests});\n    }\n\n    setGroupId(id) {\n        this.setState({groupId: id});\n    }\n\n    setRsvpSent(status) {\n        this.setState({rsvpSent: status});\n    }\n\n    setUpdatedGroup(group) {\n        this.setState({updatedGroup: group});\n    }\n\n    reset(e) {\n        e.preventDefault();\n        this.setState({\n            guests: null,\n            groupId: null,\n            rsvpSent: null,\n            updatedGroup: null\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"col-lg-8 col-md-10 pt-5\">\n                {this.state.guests ? \n                    this.state.groupId ? \n                        this.state.rsvpSent ? \n                            <Confirmation\n                                group={this.state.updatedGroup}\n                                setRsvpSent={this.setRsvpSent} \n                                reset={this.reset} \n                                setRsvpSent={this.setRsvpSent} />\n                            : <GuestRespond \n                                endpoint={this.state.endpoint}\n                                groupId={this.state.groupId}\n                                setRsvpSent={this.setRsvpSent}\n                                setUpdatedGroup={this.setUpdatedGroup}\n                                setGroupId={this.setGroupId} />\n                        : <GuestSelect \n                            guests = {this.state.guests} \n                            setGroupId={this.setGroupId}\n                            setGuests={this.setGuests} />\n                    : <GuestLookup  \n                        endpoint={this.state.endpoint} \n                        setGuests={this.setGuests} />\n                }\n            </div>\n        );\n    }\n}\n\nexport default RSVP;","import React, { Component } from 'react';\nimport RSVP from './Components/RSVP';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container-fluid p-0\">\n        <header className=\"App-header p-5 text-center\">\n          <h1>\n            RSVP for Kelly &amp; Jon's Wedding<br/>\n            <small>February 1st, 2019</small><br/>\n            <small>San Diego, CA</small>\n          </h1>\n        </header>\n        <div className=\"row justify-content-center px-3 mx-0\">\n            <RSVP />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}